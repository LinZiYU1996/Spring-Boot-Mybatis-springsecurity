<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.UserMapper" >


  <resultMap id="BaseResultMap" type="com.example.demo.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>



  <sql id="Base_Column_List" >
    id, username, password
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.User" >
    insert into user (id, username, password
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--<select id="findByUserName" parameterType="String" resultType="User">-->
    <!--SELECT * FROM user WHERE username = #{username}-->

  <!--</select>-->


  <resultMap id="userMap" type="com.example.demo.model.User">
    <id property="id" column="id"/>
    <result property="username" column="username"/>
    <result property="password" column="password"/>
    <collection property="roles" ofType="com.example.demo.model.Role">
      <result column="name" property="name"/>
    </collection>
  </resultMap>

  <!--<resultMap id="setUserRole" type="com.example.demo.model.User">-->
    <!--<id property="id" column="id"/>-->
    <!--<result property="username" column="username"/>-->
    <!--<result property="password" column="password"/>-->
    <!--<association property="role" javaType="com.example.demo.model.Role" column="name">-->
    <!--</association>-->
  <!--</resultMap>-->

    <select id="findByUserName"  resultMap="userMap" parameterType="String">
      select u.*
      ,r.name
      from user u
      LEFT JOIN user_role sru on u.id= sru.userID
      LEFT JOIN role r on sru.roldID=r.id
      where username= #{username}
    </select>
  
  <select id="getAllUsers" resultMap="userMap">
     select u.*
      ,r.name
      from user u
      LEFT JOIN user_role sru on u.id= sru.userID
      LEFT JOIN role r on sru.roldID=r.id

  </select>

  <select id="getUserId" parameterType="String" resultType="java.lang.Integer">
    SELECT id from user where username = #{username}
  </select>

  <delete id="deleteUserById" parameterType="java.lang.Integer">
    DELETE FROM user WHERE id = #{id}
  </delete>

</mapper>